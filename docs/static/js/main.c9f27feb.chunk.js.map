{"version":3,"sources":["Componentes/AddCategory.js","Componentes/GifGridItem.js","helpers/getGifs.js","Componentes/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","useFetchGifs","GiftExpertApp","categorias","c","ReactDOM","render","document","getElementById"],"mappings":"qLAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACA,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAO,OACPC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,QCLlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,EAAL,W,uBCPCK,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdN,EAFc,yDAE2CO,UAAUF,GAFrD,sDAGDG,MAAMR,GAHL,cAGdS,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVrB,kBAcbY,GAda,4CAAH,sDC+BNK,EA1BE,SAAC,GAAiB,IAAhBZ,EAAe,EAAfA,UAEf,ECJwB,SAAEA,GAE1B,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENjB,EAASC,GACRiB,MAAK,SAAAR,GACFM,EAAS,CACLT,KAAMG,EACNI,SAAS,SAIlB,CAACb,IAEGc,EDfiBI,CAAalB,GAA9BM,EAAP,EAAOA,KAAMO,EAAb,EAAaA,QAEb,OACA,qCACI,mCAAMb,EAAN,OACCa,GAAS,4CAGV,qBAAKjB,UAAU,YAAf,SAGQU,EAAKE,KAAK,SAAAC,GACN,OAAO,cAAC,EAAD,eAA+BA,GAAbA,EAAIhB,aEOlC0B,EAtBO,WAElB,MAAoCxC,mBAAU,CAAC,mBAA/C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BACK0C,EAAWZ,KAAK,SAACa,GACd,OAAO,cAAC,EAAD,CAAkBrB,UAAaqB,GAAhBA,Y,MCb1CC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c9f27feb.chunk.js","sourcesContent":["import React, {useState} from 'react' \r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategorias( cat => [inputValue, ...cat] )\r\n            setInputValue('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type = 'text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    \r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifts = async(categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=5&q=${ encodeURI(categoria) }&api_key=Z8qkWhOSa2A3NiNlHlN5575NeYwoESH9`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nconst GiftGrid = ({categoria}) => {\r\n    \r\n    const {data, loading} = useFetchGifs(categoria)\r\n    \r\n    return (\r\n    <>\r\n        <h3> {categoria} </h3>\r\n        {loading&&<p>Cargando...</p>}\r\n\r\n\r\n        <div className='card-grid'>\r\n\r\n            {\r\n                data.map( img => {\r\n                    return <GifGridItem key={img.id} { ...img }  />\r\n                })\r\n            }\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nGiftGrid.propTypes = {\r\n    categoria: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default GiftGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifts(categoria)\r\n        .then(img => {\r\n            setState({\r\n                data: img,\r\n                loading: false,\r\n            })\r\n        })\r\n\r\n    }, [categoria])\r\n\r\n    return state\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './Componentes/AddCategory'\r\nimport GiftGrid from './Componentes/GiftGrid'\r\n\r\nconst GiftExpertApp = () => {\r\n    \r\n    const [categorias, setCategorias] = useState( ['Kingdom Hearts'] )\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                {categorias.map( (c) => {\r\n                    return <GiftGrid key={c} categoria = {c} />\r\n                })}\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}